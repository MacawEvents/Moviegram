// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviegramAPI.Models;

namespace MoviegramAPI.Migrations
{
    [DbContext(typeof(MoviegramAPIContext))]
    [Migration("20190430121017_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviegramAPI.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details");

                    b.Property<byte[]>("FullImage");

                    b.Property<byte[]>("Thumbnail");

                    b.HasKey("MovieId");

                    b.ToTable("Movie");

                    b.HasData(
                        new { MovieId = 1, Details = "Movie 1 details - this movie only has 1 viewing time" },
                        new { MovieId = 2, Details = "Movie 2 details - this movie has 2 viewing times" }
                    );
                });

            modelBuilder.Entity("MoviegramAPI.Models.MovieViewTime", b =>
                {
                    b.Property<int>("MovieViewTimeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("MovieId");

                    b.HasKey("MovieViewTimeId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieViewTime");

                    b.HasData(
                        new { MovieViewTimeId = 1, DateTime = new DateTime(2000, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), MovieId = 1 },
                        new { MovieViewTimeId = 2, DateTime = new DateTime(2000, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), MovieId = 2 },
                        new { MovieViewTimeId = 3, DateTime = new DateTime(2000, 1, 2, 10, 0, 0, 0, DateTimeKind.Unspecified), MovieId = 2 }
                    );
                });

            modelBuilder.Entity("MoviegramAPI.Models.MovieViewTime", b =>
                {
                    b.HasOne("MoviegramAPI.Models.Movie", "Movie")
                        .WithMany("ViewTimes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
